/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "./boards/shields/lucy/italian.keycodes"

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT                 0

#define UTILITY                 1

#define NUM_SYMS                2

#define SYMS                    3

#define INTL                    4

#define FN_MEDIA                5

#define KEYBOARD                6

#define QWERTY                  7

&mt {
    //tapping-term-ms = <300>;
    //quick_tap_ms = <0>;
    //flavor = "tap-preferred";
    //retro-tap;
};

// configure the sticky layer behavior
&sl {
    release-after-ms = <3000>;
};


/ {

    macros {

        // PARENTHESIS
        parenthesis: parenthesis {
            label = "parenthesis";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <15>;
            tap-ms = <20>;
            bindings
                   = <
                   &kp IT_LPAR &kp IT_RPAR
                   >
                   ;
        };

        brackets: brackets {
            label = "brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <15>;
            tap-ms = <20>;
            bindings
                   = <
                   &kp IT_LBKT &kp IT_RBKT
                   >
                   ;
        };

        braces: braces {
            label = "braces";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <15>;
            tap-ms = <20>;
            bindings
                   = <
                   &kp IT_LBRC &kp IT_RBRC
                   >
                   ;
        };
    };

    combos {
        compatible = "zmk,combos";

// ------------
// LAYERS COMBOS

        // Activate the KEYBOARD layer for only one key press
/*        combo_goto_keyboard {
            timeout-ms = <75>;
            layers= <FN_MEDIA>;
            key-positions = <0 9>;
            bindings = <&sl KEYBOARD>;
        };
*/
        // Get back to default layer by pressing both thumb keys
        combo_escape_qwerty {
            timeout-ms = <50>;
            layers= <QWERTY>;
            key-positions = <30 35>;
            bindings = <&to DEFAULT>;
        };

        combo_emergency_back_to_default {
            timeout-ms = <50>;
            key-positions = <10 19 20 29>;
            bindings = <&to DEFAULT>;
        };

//--------------
// MAIN COMBOS

        combo_backspace {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp BKSP>;
            layers = <DEFAULT NUM_SYMS>;
        };

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
            layers = <DEFAULT>;
        };

// ------------
// EXPERIMENTAL COMBOS
/*
        combo_parentheses {
            timeout-ms = <25>;
            key-positions = <16 17>;
            bindings = <&parenthesis>;
            layers = <NUM_SYMS>;
        };
*/

   };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <UTILITY NUM_SYMS>;
            then-layer = <FN_MEDIA>;
        };
    };

    behaviors {

        lt_left: layer_toggle_left {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TOGGLE_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick_tap_ms = <80>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;    // <---[[right-hand keys]]
        };

        lt_right: layer_toggle_right {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TOGGLE_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick_tap_ms = <80>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;    // <---[[left-hand keys]]

        };

        // Behaviors for mods in the bottom row
        m_left: mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "MODS_LEFT";
            #binding-cells = <2>;
            //flavor = "tap-unless-interrupted";
            flavor = "tap-preferred";
            tapping-term-ms = <175>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;    // <---[[right-hand keys]]
        };

        m_right: right_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "MODS_RIGHT";
            #binding-cells = <2>;
            //flavor = "tap-unless-interrupted";
            flavor = "tap-preferred";
            tapping-term-ms = <175>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;    // <---[[left-hand keys]]
       };

    // Layer on left thumb is for quick access to symbols used while typing so I need a shorter window for triggering
    // the hold behavior. This is possible as RETURN is not used in the middle of something. Balanced behavior is perfect here
    qlt: quick_layer_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_LAYER_TOGGLE";
            #binding-cells = <2>;
            tapping-term-ms = <125>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
       };
    };

// RIGHT NOW IT IS MEANT TO BE USED WITH THE ITALIAN QWERTY LAYOUT

        keymap {
                compatible = "zmk,keymap";

//  0 - DEFAULT
       		default_layer {
		bindings = <
		&kp Q &kp W &kp F &kp P &kp B                                       &kp J &kp L  &kp U    &kp Y   &kp IT_SQUOT
		&m_left LSHFT A &kp R &kp S &lt_left INTL T &kp G 			        &kp M &lt_right SYMS N &kp E &kp I &m_right LSHFT O
		&kp Z &m_left LCTRL X &m_left LALT C &m_left LGUI D &kp V		    &kp K &m_right LGUI H  &m_right LALT CMMA &m_right LCTRL DOT &kp IT_MINUS
          	                        &qlt NUM_SYMS RET &none &none  		    &none &none &lt UTILITY SPC
		>;
		};

// 1 - UTILITY LAYER
		    utility_layer {
		bindings = <
		&kp ESC &kp PRINTSCREEN &caps_word &kp CAPS &kp INSERT          &kp PAGE_UP &kp HOME &kp END &kp DEL &kp BKSP
		&kp TAB &sk LALT &sk LCTRL &sk LSHIFT &none                     &kp LA(TAB) &kp LEFT &kp DOWN &kp UP &kp RIGHT
		&kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &kp LC(LS(Z))           &kp PAGE_DOWN &none &kp LC(LA(DOWN)) &kp LC(LA(UP)) &none
					                     &trans &trans &trans           &trans &trans &none
		>;
		};

// 2 - NUMBERS AND SYMBOLS LAYER
            numbers_symbols_layer {
		bindings = <
		&kp IT_EXCL &kp N7 &kp N8 &kp N9  &kp IT_AND          &kp IT_PIPE &brackets &kp IT_LESS &kp IT_AST &kp LC(BKSP)
		&kp N0 &kp N1 &kp N2 &kp N3       &kp IT_HASH         &kp IT_USD &parenthesis &kp IT_EQL &kp IT_FSLH &kp IT_DQUOT
		&kp IT_PERC &kp N4 &kp N5 &kp N6  &kp IT_AT           &kp IT_BSLH &braces &kp IT_GREAT &kp IT_PLUS &kp IT_CARET
					              &none &trans &trans         &trans &trans &trans
		>;
		};


// 3 - SYMBOLS LAYER
            symbols_layer {
		bindings = <
		&none &none &none &none &none                                 &none &none &none &none &none
		&none &none &none &none &none                                 &none &none &none &none &none
		&none &none &none &none &none                                 &none &none &none &none &none
			        &trans &trans &trans                              &trans &trans &trans
		>;
		};

// 4 - INTERNATIONAL LAYER
            international_layer {
		bindings = <
		&none &none &none &none &none           &none &none &kp IT_UGRV &kp IT_AGRV &trans
		&none &none &none &none &none           &none &kp IT_EGRV &kp IT_EACU &kp IT_IGRV &kp IT_OGRV
		&none &none &none &none &none           &none &none &none &none &none
				 &trans &trans &trans           &trans &trans &trans
		>;
		};

// 5 - FUNCTIONS AND MEDIA KEYS
		    fn_media_layer {
		bindings = <
		&kp IT_EUR &kp IT_TILDE &kp IT_BKTK &kp IT_DEGREE &kp IT_PND             &sl KEYBOARD &kp F7 &kp F8 &kp F9 &kp F10
        &kp K_STOP2 &kp K_PREV &kp K_NEXT &kp K_PLAY_PAUSE &none                 &to QWERTY &kp F4 &kp F5 &kp F6 &kp F11
        &kp C_BRI_DEC &kp C_BRI_INC &kp K_VOL_DN &kp K_VOL_UP &kp K_MUTE         &none &kp F1 &kp F2 &kp F3 &kp F12
                                                     &none &trans &trans         &trans &trans &none
		>;
		};

// 6 - KEYBOARD LAYER
		    keyboard_layer {
		bindings = <
		&reset  &bootloader &none &none &out OUT_USB 			        &out OUT_BLE &none   &none   &bootloader  &reset
		&none &none &bt BT_PRV &bt BT_NXT &bt BT_CLR  			        &none &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3
		&none  &none &none &none &none 				                    &none &none &none &none &bt BT_SEL 4
				            	&trans &trans &trans  					&trans &trans &trans
		>;
		};

//  QWERTY, mainly for gaming or letting others try the keyboard
       		qwerty_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R  &kp T 						&kp Y &kp U  &kp I &kp O &kp P
		&kp A &kp S &kp D &kp F &kp G 			        	&kp H &kp J &kp K &kp L &kp BKSP
		&kp Z &kp X &kp C &kp V &kp B				        &kp M &kp N &kp CMMA &kp DOT &mt LSHFT IT_MINUS
          				&kp SPC &none &none   		        &none &none &kp RET
		>;
		};

	};
};
